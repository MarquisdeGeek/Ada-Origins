let code = [
/*  0 */  { op:undefined, d:[] }, // 
/*  1 */  { op:'x', a:2,  b:3,  d:[4,5,6] }, // 2n
/*  2 */  { op:'-', a:4,  b:1,  d:[4] },     // 2n-1
/*  3 */  { op:'+', a:5,  b:1,  d:[5] },     // 2n+1
/*  4 */  { op:'/', a:5,  b:4,  d:[11] },    // (2n-1)/(2n+1)
/*  5 */  { op:'/', a:11, b:2,  d:[11] },    // (2n-1)/(2n+1)/2

/*  6 */  { op:'-', a:13, b:11, d:[13] },    // A0 = - ...
/*  7 */  { op:'-', a:3,  b:1,  d:[10] },    // n-1 = 3
/*  8 */  { op:'+', a:2,  b:7,  d:[7] },     // 2+0 = 2, i.e. V2 -> V7
/*  9 */  { op:'/', a:6,  b:7,  d:[11] },    // A0 = 2n/2 = Aj
/* 10 */  { op:'x', a:21, b:11, d:[12] },    // B1*A0
/* 11 */  { op:'+', a:12, b:13, d:[13] },    // V12 -> V13: x = V12
/* 12 */  { op:'-', a:10, b:1,  d:[10] },    // j-1 = 2

/* 13 */  { op:'-', a:6,  b:1,  d:[6] },     // 2n-1
/* 14 */  { op:'+', a:1,  b:7,  d:[7] },     // 2+1=3 (j)
/* 15 */  { op:'/', a:6,  b:7,  d:[8] },     // (2n-1)/3
/* 16 */  { op:'x', a:8,  b:11, d:[11] },    // Aj * (2n-1)/3
/* 17 */  { op:'-', a:6,  b:1,  d:[6] },     // 2n-2
/* 18 */  { op:'+', a:1,  b:7,  d:[7] },     // 3+1=4 (j+1)
/* 19 */  { op:'/', a:6,  b:7,  d:[9] },     // (2n-2)/4
/* 20 */  { op:'x', a:9,  b:11, d:[11] },    // Aj * (2n-2)/4 -> Aj = A3

/* 21 */  { op:'x', a:22, b:11, d:[12] },    // A3 * B3 (written as B3 * A3)
/* 22 */  { op:'+', a:12, b:13, d:[13] },    // x + A3*B3 -> x
/* 23 */  { op:'-', a:10, b:1,  d:[10] },    // j-1 = 1
/* 24 */  { op:'?', jump:13, d:[] },         // ~> 13 repeat if j>0 

/* 25 */  { op:'-', a:13, b:24, d:[24] },    // B7 = -x
/* 26 */  { op:'+', a:1,  b:3,  d:[3] },     // n+1 -> n
];
